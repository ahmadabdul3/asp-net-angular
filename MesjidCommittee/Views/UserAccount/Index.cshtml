
<script src='@Url.Content("~/MembersIndex/FrontEnd/Utils/HttpService.js")'></script>

<div class="login-page-box">
    <div id="login-page-background"></div>
    <div class="form-box" id="login-form" data-ng-app="account" data-ng-controller="loginctl as logctl">
    
        <form name="loginForm" novalidate>
            <div class="form-item error-text">
                {{logctl.loginErrorMessage}}
            </div>
            <div class="form-item">
                <label>
                    Username
                </label>
                <!--ng-model-options="{ updateOn: 'blur' }"-->
                <div class="login-form-input-box">
                    <input type="text" name="username" data-ng-model="logctl.username"
                           ng-class="{ 'invalid' : loginForm.username.$invalid && !loginForm.username.$pristine}"
                           required class="login-form-input" />
                </div>
                <div class="error-message-hidden" ng-class="{'visible': loginForm.username.$invalid && !loginForm.username.$pristine}">
                    <label></label>
                    <p class="error-text error-message">Required input</p>
                </div>
            </div>
            <div class="form-item">
                <label>
                    Password
                </label>
                <div class="login-form-input-box">
                    <input type="password" name="password" data-ng-model="logctl.password"
                           ng-class="{ 'invalid' : loginForm.password.$invalid && !loginForm.password.$pristine}"
                           required class="login-form-input" />
                </div>
                <div class="error-message-hidden" ng-class="{'visible': loginForm.password.$invalid && !loginForm.password.$pristine}">
                    <label></label>
                    <p class="error-text error-message">Required input</p>
                </div>
            </div>
            
            <div class="txt-center {{logctl.loginButtonVisibility}}">
                <button ng-disabled="loginForm.$invalid" class="" data-ng-click="logctl.login()">
                    Login
                </button>
           
            </div>
            <div class="txt-center {{logctl.loadingGifVisibility}}" style="">
                <div class="col">
                    <img src="~/Content/loading-gifs/loading5.gif" width="35" height="35" />
                </div>
            </div>

        </form>
    </div>
    <div class="vert-mid-hack"></div>
</div>

<script type="text/javascript">
    $(function () {
        var pageBackground = $('#login-page-background');
        var index = 1;
        var pageBackgroundClass = 'login-page-background-'
        pageBackground.attr('class', pageBackgroundClass + '1');

        function updateClass() {
            updateBackgroundClass(pageBackground, 'login-page-background-' + index);
            index++;
            if (index === 6) index = 1;
        }
        function myTimeoutFunction() {
            updateClass();
            setTimeout(myTimeoutFunction, 12000);
        }
        if(window.innerWidth > 399) {
            myTimeoutFunction();
        }
    });
    function updateBackgroundClass(element, newClass) {
        element.attr('class', newClass);
    }
</script>
<script type="text/javascript">
    angular.module('account', ['HttpUtil'])
    .service('loginService', loginService)
    .controller('loginctl', loginctl);


    loginctl.$inject = ['HttpService'];
    function loginctl(HttpService) {
        var self = this;
        self.username = '';
        self.password = '';
        self.login = loginFunc;
        self.register = registerFunc;
        self.loginButtonVisibility = '';
        self.loadingGifVisibility = 'hidden';
        self.loginErrorMessage = '';

        function loginFunc() {
            var loginData = {
                UserId: 0,
                Username: self.username,
                UserPassword: self.password
            };
            self.loginButtonVisibility = 'hidden';
            self.loadingGifVisibility = '';
            HttpService.httpWithParams("/UserAccount/Login", HttpService.postMethod, loginData).then(function (data) {
                if (data.status.indexOf('Error:') > -1) {
                    //showError(data.message);
                    //confirm(data.message);
                    self.loginErrorMessage = data.message;
                    self.loginButtonVisibility = '';
                    self.loadingGifVisibility = 'hidden';
                } else {
                    self.loginErrorMessage = '';
                    console.log(data.message);
                    location.href = '@Url.Action("Index", "Members", new {} )';
                }
            }, HttpService.handleHttpError);
        }

        function registerFunc() {
            var loginData = {
                UserId: 0,
                Username: self.username,
                UserPassword: self.password
            };
            HttpService.httpWithParams("/UserAccount/Register", HttpService.postMethod, loginData).then(function (data) {
                if (data.status.indexOf('Error:') > -1) {
                    //showError(data.message);
                    alert(data.message);
                } else {
                    console.log(data.message);
                    location.href = '@Url.Action("Index", "Members", new {} )';
                }
            }, HttpService.handleHttpError);
        }
    }
    function loginService() {

    }
</script>



